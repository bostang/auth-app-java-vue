apiVersion: apps/v1
kind: StatefulSet 
metadata:
  name: postgresql
  labels:
    app: postgresql
  # Jika Anda menempatkan PostgreSQL di namespace 'backend', deployment ini juga harus di namespace yang sama.
  # namespace: backend
spec:
  serviceName: "postgresql-service" 
  replicas: 1 
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:15-alpine 
          imagePullPolicy: IfNotPresent 
          ports:
            - containerPort: 5432
              name: postgresql
              protocol: TCP 
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials 
                  key: database 
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            - name: PGDATA 
              value: /var/lib/postgresql/data/pgdata 
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data 
            # --- Tambahan untuk inisialisasi DB ---
            - name: postgres-init-volume
              mountPath: /docker-entrypoint-initdb.d/init.sql # Mounting sebagai file tunggal
              subPath: init.sql # Merujuk ke key 'init.sql' di ConfigMap
              readOnly: true
          resources:
            requests:
              cpu: "500m" 
              memory: "2Gi" 
            limits:
              cpu: "1.5" 
              memory: "4Gi"
          livenessProbe: 
            exec:
              command: ["pg_isready", "-U", "$(POSTGRES_USER)", "-d", "$(POSTGRES_DB)", "-h", "localhost"]
            initialDelaySeconds: 30 
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe: 
            exec:
              command: ["pg_isready", "-U", "$(POSTGRES_USER)", "-d", "$(POSTGRES_DB)", "-h", "localhost"]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      volumes:
        # --- Tambahan untuk inisialisasi DB ---
        - name: postgres-init-volume
          configMap:
            name: postgres-init-scripts # Nama ConfigMap yang dibuat di langkah 1
            items:
            - key: init.sql # Merujuk ke key 'init.sql' di ConfigMap
              path: init.sql # Nama file yang akan dibuat di mountPath
  volumeClaimTemplates:
    - metadata:
        name: postgres-data 
      spec:
        accessModes:
          - ReadWriteOnce 
        resources:
          requests:
            storage: 5Gi