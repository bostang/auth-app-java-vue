services:
  # --- PostgreSQL Database Service ---
  db:
    image: postgres:17
    container_name: db
    # restart: always
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: password # GANTI dengan password yang aman!
    volumes:
      - db_data:/var/lib/postgresql/data # Volume untuk menyimpan data persisten
      - ./database:/docker-entrypoint-initdb.d # Folder untuk script inisialisasi database
    # ports:
    #   - "5432:5432" # Opsional: ekspos port database ke host (untuk debugging/akses langsung)
    healthcheck: # Healthcheck untuk memastikan DB siap sebelum backend jalan
      test: ["CMD-SHELL", "pg_isready -U auth_user -d auth_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - be-network # Gunakan network khusus untuk backend
      # - app-network # Juga bisa diakses oleh frontend jika perlu

  # --- Spring Boot Backend Service ---
  backend:
    build: ./backend # Mengacu pada Dockerfile di folder 'backend'
    # restart: always
    container_name: backend
    ports:
      - "8081:8081" # Ekspos port backend ke host
    environment:
      # Inject environment variables for Spring Boot
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/auth_db # 'db' adalah nama service database di docker-compose
      SPRING_DATASOURCE_USERNAME: auth_user
      SPRING_DATASOURCE_PASSWORD: password # GANTI dengan password yang sama dengan DB
      JWT_SECRET: yourVerySecretKeyThatIsAtLeast256BitsLongAndShouldBeStoredSecurely # GANTI dengan secret yang sama
      JWT_EXPIRATION: 86400000 # 24 jam
      APP_FRONTEND_URL: http://localhost:8080 # URL frontend untuk CORS
    depends_on:
      db:
        condition: service_healthy # Pastikan database sehat sebelum backend dimulai
    networks:
      - app-network
      - be-network
    # command: ["sh", "-c", "sleep 15 && java -jar app.jar"] # Menunggu 10 detik sampai DB siap

  # --- Vue.js Frontend Service ---
  frontend:
    build:
      context: ./frontend # Mengacu pada Dockerfile di folder 'frontend'
      dockerfile: Dockerfile # Pastikan ada Dockerfile di folder frontend
      args:
        VUE_APP_API_BASE_URL: http://localhost:8081/api # Teruskan sebagai build argument
    # restart: always
    container_name: frontend
    ports:
      - "8080:80" # Ekspos port Nginx (80) di kontainer ke port 8080 di host
      ## NILAINYA TIDAK DIBAKAR SAAT PROSES BUILD
    # environment:
      # Environment variable untuk Vue.js, yang digunakan saat 'npm run build'
      # Ini akan di-inject ke proses build Vue. CLI akan mengganti placeholder saat build.
      # Ingat, untuk Vue, variabel ini harus diawali dengan VUE_APP_
      # VUE_APP_API_BASE_URL: http://localhost:8081/api # URL API backend di dalam Docker network
    depends_on:
      - backend # Frontend tergantung pada backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
  be-network:
    driver: bridge

volumes:
  db_data: # Volume yang akan digunakan oleh database